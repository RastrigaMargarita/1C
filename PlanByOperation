//Модуль пооперационного планирования производства для 1С:УПП

#Если Клиент Тогда 
	Функция ОпределитьПринадлежностьОбъектовПооперационногоПланирования(ДокСсылка) Экспорт
		
		Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.ЗаказНаПроизводство")  Тогда
			
			Если ДокСсылка.ПоОперационноеПланирование Тогда
				
				Возврат(Истина);
			иначе
				Возврат(ложь);
				
			КонецЕсли; 
			
		Иначеесли ТипЗнч(ДокСсылка) = Тип("СправочникСсылка.Подразделения")  Тогда
			Запрос = новый запрос;
			Запрос.текст = "ВЫБРАТЬ
			|	М_ПодразделенияПооперационногоПланирования.Подразделение
			|ИЗ
			|	РегистрСведений.М_ПодразделенияПооперационногоПланирования КАК М_ПодразделенияПооперационногоПланирования
			|ГДЕ
			|	М_ПодразделенияПооперационногоПланирования.Подразделение = &Подразделение" ;
			Запрос.УстановитьПараметр("Подразделение", ДокСсылка);
			Выборка = запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				
				Возврат(Истина);
			иначе
				Возврат(ложь);
				
			КонецЕсли; 
			
		Иначе 
			Возврат(ложь);
		КонецЕсли; 
		
	КонецФункции
	
	
	//Приоритеты партий и учет ТМО
	Процедура М_ОбработкаПроведенияЗаказНаПроизводствоОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт 
		
		// проверяем наличие ссылки на документ в регистре сведений М_ПриоритетыПартий
		
		ПООП =  М_ПооперационноеПланированиеПроизводства.ОпределитьПринадлежностьОбъектовПооперационногоПланирования(Источник.Ссылка); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	М_ПриоритетыПартий.ЗаказНаПроизводство,
		|	М_ПриоритетыПартий.НомерПартии,
		|	М_ПриоритетыПартий.Выполнено
		|ИЗ
		|	РегистрСведений.М_ПриоритетыПартий КАК М_ПриоритетыПартий
		|ГДЕ
		|	М_ПриоритетыПартий.ЗаказНаПроизводство = &ЗаказНаПроизводство";
		
		Запрос.УстановитьПараметр("ЗаказНаПроизводство", Источник.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		Если РезультатЗапроса.Количество() = 0 и ПООП Тогда // нет записи в регистре - создаём новую
			// получаем номер максимального номера партии
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	М_ПриоритетыПартий.НомерПартии КАК НомерПартии
			|ИЗ
			|	РегистрСведений.М_ПриоритетыПартий КАК М_ПриоритетыПартий
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерПартии УБЫВ";
			
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			
			Если РезультатЗапроса.Количество() = 0 Тогда
				МаксНомер = 0;
			Иначе 
				МаксНомер = РезультатЗапроса[0].НомерПартии;
			КонецЕсли;
			
			ТекНомерПартии = МаксНомер + 1;
			
			// добавляем новую запись
			НаборЗаписей = РегистрыСведений.М_ПриоритетыПартий.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ЗаказНаПроизводство.Установить(Источник.Ссылка);
			
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.ЗаказНаПроизводство = Источник.Ссылка; 
			НоваяЗапись.НомерПартии = ТекНомерПартии; 
			НоваяЗапись.Выполнено = Ложь; 
			НаборЗаписей.Записать(); 
		ИначеЕсли РезультатЗапроса.Количество() > 0 и НЕ ПООП Тогда
			НаборЗаписей = РегистрыСведений.М_ПриоритетыПартий.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ЗаказНаПроизводство.Установить(Источник.Ссылка);
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
		Если ПООП Тогда
			
			НаборЗаписей = источник.движения.МатериалыПоЗаказуНаПроизводство;
			
			// добавление новых записей
			Для Каждого Стр ИЗ Источник.Материалы Цикл
				Движение = НаборЗаписей.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.ЗаказНаПроизводство = Источник.Ссылка;
				Движение.Номенклатура = Стр.Номенклатура;
				Движение.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
				Движение.НомерОперации = СокрЛП(Стр.НомерОперации);
				Движение.Количество = Стр.Количество;
				Движение.Период = Источник.Дата;
			КонецЦикла;	
			
			
			
		КонецЕсли; 
		
		
		
		
	КонецПроцедуры
	
	Процедура М_ОбработкаРаспроведенияЗаказаНаПроизводствоОбработкаУдаленияПроведения(Источник, Отказ) Экспорт
		
		Если М_ПооперационноеПланированиеПроизводства.ОпределитьПринадлежностьОбъектовПооперационногоПланирования(Источник.Ссылка)  тогда
			
			// "При распроведении ЗП  и установленой метке "выполнение" - отказ в распроведении с уведомлением пользователя!"
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	М_ПриоритетыПартий.ЗаказНаПроизводство,
			|	М_ПриоритетыПартий.Выполнено
			|ИЗ
			|	РегистрСведений.М_ПриоритетыПартий КАК М_ПриоритетыПартий
			|ГДЕ
			|	М_ПриоритетыПартий.ЗаказНаПроизводство = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			
			Если РезультатЗапроса.Количество() > 0 Тогда
				Если РезультатЗапроса[0].Выполнено Тогда
					Отказ = Истина;
					Сообщить("Нельзя отменить проведение заказа на производство, так как он выполнен.", СтатусСообщения.Внимание);
					Возврат;
				КонецЕсли;	
			КонецЕсли;
			
			// "При установки пометки на удаление ЗП и отсутствии метки "выполнение" - удаление записи из регистра."
			// удаляем данные о заказе из регистра сведений М_ПриоритетыПартий
			МенеджерЗаписи = РегистрыСведений.М_ПриоритетыПартий.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ЗаказНаПроизводство = Источник;
			МенеджерЗаписи.Прочитать();
			
			Если МенеджерЗаписи.Выбран() Тогда
				МенеджерЗаписи.Удалить();
			КонецЕсли;
			
		Иначе
			НаборЗаписей = РегистрыСведений.М_ПриоритетыПартий.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ЗаказНаПроизводство.Установить(Источник.Ссылка);
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
		//-*-
		
	КонецПроцедуры
	
	//Заказ на производство
	
	Процедура ЗаполнитьВЗаказеНаПроизводствоМатериалыМаршрут(Ссылка, Спецификация) Экспорт 
		
		// получаем спецификацию
		текСпецификация = Спецификация;
		текКоличество = Ссылка.Продукция[0].Количество;
		
		// материалы
		Ссылка.Материалы.Очистить(); // уже д.б. очищена в модуле формы, но, на всякий случай, ещё раз
		Для Каждого Стр ИЗ текСпецификация.ИсходныеКомплектующие Цикл
			НовСтр = Ссылка.Материалы.Добавить();
			НовСтр.Номенклатура = Стр.Номенклатура;
			НовСтр.ЕдиницаИзмерения = Стр.ЕдиницаИзмерения;
			НовСтр.Коэффициент = Стр.ЕдиницаИзмерения.Коэффициент;
			НовСтр.ВидВоспроизводства = Стр.Номенклатура.ВидВоспроизводства;
			НовСтр.НомерОперации = Стр.НомерОперацииМаршрута;
			НовСтр.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
			
			ВыходноеИзделие = текСпецификация.ВыходныеИзделия.Получить(0);
			ВИ_Номенклатура 				= ВыходноеИзделие.Номенклатура;
			ВИ_ХарактеристикаНоменклатуры 	= ВыходноеИзделие.ХарактеристикаНоменклатуры;
			
			НовСтр.ХарактеристикаПродукции = ВИ_ХарактеристикаНоменклатуры;
			НовСтр.Продукция = ВИ_Номенклатура;
			//НовСтр.Спецификация = текСпецификация;
			НовСтр.Подразделение = Ссылка.Подразделение;
			НовСтр.Количество = Стр.Количество * текКоличество;
		КонецЦикла;
		
		// документация
		Ссылка.Документация.Очистить();
		Для Каждого Стр ИЗ текСпецификация.Документация Цикл
			НовСтр = Ссылка.Документация.Добавить();
			НовСтр.Обозначение = Стр.Обозначение;
			НовСтр.Наименование = Стр.Наименование;
			НовСтр.ПутьКДокументации = Стр.ПутьКДокументации;
			НовСтр.Примечание = Стр.Примечание;
		КонецЦикла;
		
		
		// маршрут	
		Ссылка.Маршрут.Очистить(); // контрольная очистка табл.части
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТехнологическиеКартыСпецификацийПланированияСрезПоследних.Спецификация,
		|	ТехнологическиеКартыСпецификацийПланированияСрезПоследних.ТехнологическаяКарта
		|ИЗ
		|	РегистрСведений.ТехнологическиеКартыСпецификацийПланирования.СрезПоследних(, Спецификация = &Спецификация) КАК ТехнологическиеКартыСпецификацийПланированияСрезПоследних";
		
		Запрос.УстановитьПараметр("ДатаДок", Ссылка.Дата);
		Запрос.УстановитьПараметр("Спецификация", текСпецификация);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		Если РезультатЗапроса.Количество() = 0 Тогда
			Возврат;
		Иначе
			текТехКарта = РезультатЗапроса[0].ТехнологическаяКарта;
		КонецЕсли;
		
		Для Каждого Стр ИЗ текТехКарта.Маршрут Цикл
			НовСтр = Ссылка.Маршрут.Добавить();
			НовСтр.ВремяВыполнения = Стр.ВремяВыполнения * Стр.Количество;
			НовСтр.Количество = Стр.Количество * текКоличество;
			НовСтр.НомерОперации = Стр.НомерОперации;
			НовСтр.РабочийЦентр = Стр.РабочийЦентр;
			НовСтр.СледующиеОперации = Стр.СледующиеОперации;
			НовСтр.ТехнологическаяОперация = Стр.ТехнологическаяОперация;
		КонецЦикла;
		
		
	КонецПроцедуры
	
	//План производства по сменам
	
	Процедура ЗаполнитьПланПроизводстваСпискомПартий(Объект) Экспорт 
		
		Объект.ДанныеЗаказов.Очистить();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	М_ПриоритетыПартий.ЗаказНаПроизводство,
		|	М_ПриоритетыПартий.НомерПартии КАК НомерПартии
		|ИЗ
		|	РегистрСведений.М_ПриоритетыПартий КАК М_ПриоритетыПартий
		|ГДЕ
		|	НЕ М_ПриоритетыПартий.Выполнено
		|	И М_ПриоритетыПартий.ЗаказНаПроизводство.Проведен
		|	И М_ПриоритетыПартий.ЗаказНаПроизводство.Подразделение = &Подразделение
		|	И М_ПриоритетыПартий.ЗаказНаПроизводство.ДатаЗапуска <= &ТекДата
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПартии";
		
		Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
		Запрос.УстановитьПараметр("ТекДата", КонецДня(текущаяДата()));
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		Для Каждого Стр ИЗ РезультатЗапроса Цикл	
			НовСтр = Объект.ДанныеЗаказов.Добавить();
			НовСтр.Заказ = Стр.ЗаказНаПроизводство;
			НовСтр.ДатаВыпуска = НовСтр.Заказ.ДатаИсполнения;
			НовСтр.ДатаЗапуска = НовСтр.Заказ.ДатаЗапуска;
			НовСтр.ВариантРаспределенияВыпусков = Перечисления.ВариантыРаспределенияПоПериоду.КакМожноБыстрее;
		КонецЦикла;	
		
	КонецПроцедуры	
	
	Процедура ВыполнитьПланирование(ТабЧастьЗаказы, ТабЧастьПлан, Подразделение, ДатаПерепланирования) Экспорт
		Остановить = ложь;
		Если ТабЧастьПлан.Количество() > 0 Тогда
			Если Вопрос("Табличная часть планирования по операциям не пустая и будет очищена, продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да тогда
				ТабЧастьПлан.Очистить();
			Иначе	
				Остановить = Истина;
				
				
			КонецЕсли; 
			
		КонецЕсли;	
		
		Если Не Остановить Тогда
			ДатаПланирования = ДатаПерепланирования;
			Сообщить ("/////////////////////////////////////////////////// ");
			Сообщить ("ФОРМИРОВАНИЕ ПЛАНА ПРОИЗВОДСТВА");
			
			ПроверкаДня = ПроверитьДень(ДатаПланирования, Подразделение, Истина); 
			Если ПроверкаДня > 0  Тогда
				Сообщить ("//ОПЕРАЦИИ//");
				
				ЗапросТаблицыТО = новый Запрос;
				ЗапросТаблицыТО.Текст = 
				
				"ВЫБРАТЬ
				|	ТабЧастьЗаказы.Заказ КАК ЗаказНаПроизводство,
				|	ТабЧастьЗаказы.НомерСтроки КАК НомерСтроки
				|ПОМЕСТИТЬ ТабЧастьЗаказы
				|ИЗ
				|	&ТабЧастьЗаказы КАК ТабЧастьЗаказы
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ОбъемРаспределения.ЗаказНаПроизводство,
				|	ОбъемРаспределения.НомерЗаказа,
				|	ОбъемРаспределения.КоличествоПродукции,
				|	ОбъемРаспределения.НомерОперации,
				|	ОбъемРаспределения.РабочийЦентр,
				|	ОбъемРаспределения.ТехнологическаяОперация,
				|	ОбъемРаспределения.КоличествоОпераций,
				|	ОбъемРаспределения.СледующиеОперации,
				|	ОбъемРаспределения.НормаТО,
				|	ОбъемРаспределения.Длительность,
				|	ОбъемРаспределения.КонечнаяПродукция,
				|	ОбъемРаспределения.ХарактеристикаКонечнойПродукции,
				|	ВыполненныеСотрудник.РабочийЦентр КАК РЦСотрудник,
				|	ОбъемРаспределения.Длительность - ЕСТЬNULL(ВыполненныеСотрудник.Выполнение, 0) КАК ДлительностьДляПлана,
				|	ВыполненныеОборудование.РабочийЦентр КАК РЦОборудование,
				|	ОбъемРаспределения.КоличествоОпераций КАК Количество,
				|	ВыполненныеСотрудник.Выполнение
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПланПроизводстваПоСменамДанныеЗаказов.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
				|		ПланПроизводстваПоСменамДанныеЗаказов.НомерСтроки КАК НомерЗаказа,
				|		ЗаказНаПроизводствоПродукция.Количество КАК КоличествоПродукции,
				|		ЗаказНаПроизводствоМаршрут.НомерОперации КАК НомерОперации,
				|		ЗаказНаПроизводствоМаршрут.РабочийЦентр КАК РабочийЦентр,
				|		ЗаказНаПроизводствоМаршрут.ТехнологическаяОперация КАК ТехнологическаяОперация,
				|		ЗаказНаПроизводствоМаршрут.Количество КАК КоличествоОпераций,
				|		ВЫБОР
				|			КОГДА ЗаказНаПроизводствоМаршрут.СледующиеОперации = """"
				|				ТОГДА ""Выпуск""
				|			ИНАЧЕ ЗаказНаПроизводствоМаршрут.СледующиеОперации
				|		КОНЕЦ КАК СледующиеОперации,
				|		ЗаказНаПроизводствоМаршрут.ВремяВыполнения КАК НормаТО,
				|		ЗаказНаПроизводствоМаршрут.ВремяВыполнения * ЗаказНаПроизводствоМаршрут.Количество КАК Длительность,
				|		ЗаказНаПроизводствоПродукция.Номенклатура КАК КонечнаяПродукция,
				|		ЗаказНаПроизводствоПродукция.ХарактеристикаНоменклатуры КАК ХарактеристикаКонечнойПродукции
				|	ИЗ
				|		ТабЧастьЗаказы КАК ПланПроизводстваПоСменамДанныеЗаказов
				|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
				|			ПО ПланПроизводстваПоСменамДанныеЗаказов.ЗаказНаПроизводство = ЗаказНаПроизводствоПродукция.Ссылка
				|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Маршрут КАК ЗаказНаПроизводствоМаршрут
				|			ПО ПланПроизводстваПоСменамДанныеЗаказов.ЗаказНаПроизводство = ЗаказНаПроизводствоМаршрут.Ссылка) КАК ОбъемРаспределения
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			ТабЧастьЗаказы.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
				|			МАКСИМУМ(М_ВыполненыеТехнологическиеОперации.РабочийЦентр) КАК РабочийЦентр,
				|			СУММА(М_ВыполненыеТехнологическиеОперации.Выполнение) КАК Выполнение,
				|			М_ВыполненыеТехнологическиеОперации.ТехнологическаяОперация КАК ТехнологическаяОперация,
				|			М_ВыполненыеТехнологическиеОперации.НомерОперации КАК НомерОперации
				|		ИЗ
				|			ТабЧастьЗаказы КАК ТабЧастьЗаказы
				|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.М_ВыполненыеТехнологическиеОперации КАК М_ВыполненыеТехнологическиеОперации
				|				ПО ТабЧастьЗаказы.ЗаказНаПроизводство = М_ВыполненыеТехнологическиеОперации.ЗаказНаПроизводство
				|		ГДЕ
				|			М_ВыполненыеТехнологическиеОперации.Выполнение > 0
				|			И М_ВыполненыеТехнологическиеОперации.РабочийЦентр.М_Оборудование = ЛОЖЬ
				|		
				|		СГРУППИРОВАТЬ ПО
				|			ТабЧастьЗаказы.ЗаказНаПроизводство,
				|			М_ВыполненыеТехнологическиеОперации.ТехнологическаяОперация,
				|			М_ВыполненыеТехнологическиеОперации.НомерОперации) КАК ВыполненныеСотрудник
				|		ПО ОбъемРаспределения.ЗаказНаПроизводство = ВыполненныеСотрудник.ЗаказНаПроизводство
				|			И ОбъемРаспределения.НомерОперации = ВыполненныеСотрудник.НомерОперации
				|			И ОбъемРаспределения.ТехнологическаяОперация = ВыполненныеСотрудник.ТехнологическаяОперация
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			ТабЧастьЗаказы.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
				|			МАКСИМУМ(М_ВыполненыеТехнологическиеОперации.РабочийЦентр) КАК РабочийЦентр,
				|			СУММА(М_ВыполненыеТехнологическиеОперации.Выполнение) КАК Выполнение,
				|			М_ВыполненыеТехнологическиеОперации.ТехнологическаяОперация КАК ТехнологическаяОперация,
				|			М_ВыполненыеТехнологическиеОперации.НомерОперации КАК НомерОперации
				|		ИЗ
				|			ТабЧастьЗаказы КАК ТабЧастьЗаказы
				|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.М_ВыполненыеТехнологическиеОперации КАК М_ВыполненыеТехнологическиеОперации
				|				ПО ТабЧастьЗаказы.ЗаказНаПроизводство = М_ВыполненыеТехнологическиеОперации.ЗаказНаПроизводство
				|		ГДЕ
				|			М_ВыполненыеТехнологическиеОперации.РабочийЦентр.М_Оборудование = ИСТИНА
				|		
				|		СГРУППИРОВАТЬ ПО
				|			ТабЧастьЗаказы.ЗаказНаПроизводство,
				|			М_ВыполненыеТехнологическиеОперации.ТехнологическаяОперация,
				|			М_ВыполненыеТехнологическиеОперации.НомерОперации) КАК ВыполненныеОборудование
				|		ПО ОбъемРаспределения.ЗаказНаПроизводство = ВыполненныеОборудование.ЗаказНаПроизводство
				|			И ОбъемРаспределения.НомерОперации = ВыполненныеОборудование.НомерОперации
				|			И ОбъемРаспределения.ТехнологическаяОперация = ВыполненныеОборудование.ТехнологическаяОперация
				|ГДЕ
				|	ОбъемРаспределения.Длительность - ЕСТЬNULL(ВыполненныеСотрудник.Выполнение, 0) > 0
				|
				|УПОРЯДОЧИТЬ ПО
				|	ВыполненныеСотрудник.Выполнение УБЫВ,
				|	ОбъемРаспределения.НомерЗаказа,
				|	ОбъемРаспределения.НомерОперации,
				|	ОбъемРаспределения.СледующиеОперации";
				
				
				ЗапросТаблицыТО.УстановитьПараметр("ТабЧастьЗаказы", ТабЧастьЗаказы);
				ЗапросТаблицыТО.УстановитьПараметр("Дата", ДатаПланирования);
				
				ТаблицаТО = новый ТаблицаЗначений;
				ТаблицаТО = ЗапросТаблицыТО.Выполнить().Выгрузить();
				
				
				КонтрольНерабочихДней = 0;
				
				Пока ТаблицаТО.Итог("ДлительностьДляПлана")>0  цикл
					КонтрольУменьшенияДлительности = ТаблицаТО.Итог("ДлительностьДляПлана");
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	М_ГрафикДоступностиРЦ.РабочийЦентр,
					|	ВЫБОР
					|		КОГДА М_ГрафикДоступностиРЦ.ДатаНачала > НАЧАЛОПЕРИОДА(&ДатаПланирования, ДЕНЬ)
					|			ТОГДА М_ГрафикДоступностиРЦ.ДатаНачала
					|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаПланирования, ДЕНЬ)
					|	КОНЕЦ КАК ДатаНачала,
					|	ВЫБОР
					|		КОГДА М_ГрафикДоступностиРЦ.ДатаОкончания > НАЧАЛОПЕРИОДА(&ДатаПланирования, ДЕНЬ)
					|			ТОГДА М_ГрафикДоступностиРЦ.ДатаОкончания
					|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаПланирования, ДЕНЬ)
					|	КОНЕЦ КАК ДатаОкончания,
					|	РАЗНОСТЬДАТ(ВЫБОР
					|			КОГДА М_ГрафикДоступностиРЦ.ДатаНачала > НАЧАЛОПЕРИОДА(&ДатаПланирования, ДЕНЬ)
					|				ТОГДА М_ГрафикДоступностиРЦ.ДатаНачала
					|			ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаПланирования, ДЕНЬ)
					|		КОНЕЦ, ВЫБОР
					|			КОГДА М_ГрафикДоступностиРЦ.ДатаОкончания > НАЧАЛОПЕРИОДА(&ДатаПланирования, ДЕНЬ)
					|				ТОГДА М_ГрафикДоступностиРЦ.ДатаОкончания
					|			ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаПланирования, ДЕНЬ)
					|		КОНЕЦ, СЕКУНДА) КАК Длительность
					|ИЗ
					|	РегистрСведений.М_ГрафикДоступностиРЦ КАК М_ГрафикДоступностиРЦ
					|ГДЕ
					|	М_ГрафикДоступностиРЦ.РабочийЦентр.Подразделение = &Подразделение
					|	И М_ГрафикДоступностиРЦ.ДатаОкончания >= НАЧАЛОПЕРИОДА(&ДатаПланирования, ДЕНЬ)
					|	И М_ГрафикДоступностиРЦ.ДатаНачала <= КОНЕЦПЕРИОДА(&ДатаПланирования, ДЕНЬ)";
					
					Запрос.УстановитьПараметр("ДатаПланирования", ДатаПланирования);
					Запрос.УстановитьПараметр("Подразделение", Подразделение);
					
					ТаблицаРЦ = Запрос.Выполнить().Выгрузить();
					
					//Если КонтрольНерабочихДней = 0 тогда
					//Для каждого СтрТаблицаТО Из ТаблицаТО Цикл
					//	Если НЕ ЗначениеЗаполнено(СТрТаблицаТО.ТехнологическаяКарта) Тогда
					//		
					//		Сообщить ("Не найдена тех.карта для заказа " + СтрТаблицаТО.ЗаказНаПроизводство + ", возможно дата ее утверждения позже даты планирования");
					//		
					//		
					//	КонецЕсли; 
					//КонецЦикла
					//КонецЕсли;
					
					
					
					Для каждого СтрТаблицаТО Из ТаблицаТО Цикл
						
						//Проверка на наличие материалов
						//Если СтрТаблицаТО.ДлительностьДляПлана = СтрТаблицаТО.Длительность  Тогда
						
						
						ЗапросМатериалов = новый Запрос;
						ЗапросМатериалов.Текст = "ВЫБРАТЬ
						|	СписокМатериалов.Номенклатура,
						|	СписокМатериалов.Количество - ЕСТЬNULL(ТоварыВРезерве.КоличествоОстаток, 0) - ЕСТЬNULL(МатериалыВПроизводствеОстатки.КоличествоОстаток, 0) КАК НедостающееКоличество
						|ИЗ
						|	(ВЫБРАТЬ
						|		ЗаказНаПроизводствоМатериалы.Номенклатура КАК Номенклатура,
						|		ЗаказНаПроизводствоМатериалы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
						|		ЗаказНаПроизводствоМатериалы.Количество КАК Количество,
						|		ЗаказНаПроизводствоМатериалы.НомерОперации КАК НомерОперацииМаршрута
						|	ИЗ
						|		Документ.ЗаказНаПроизводство.Материалы КАК ЗаказНаПроизводствоМатериалы
						|	ГДЕ
						|		ЗаказНаПроизводствоМатериалы.НомерОперации = &НомерОперации
						|		И ЗаказНаПроизводствоМатериалы.Ссылка = &ЗаказНаПроизводство) КАК СписокМатериалов
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&ДатаПланирования, ДокументРезерва = &ЗаказНаПроизводство) КАК ТоварыВРезерве
						|		ПО СписокМатериалов.Номенклатура = ТоварыВРезерве.Номенклатура
						|			И СписокМатериалов.ХарактеристикаНоменклатуры = ТоварыВРезерве.ХарактеристикаНоменклатуры
						|			И СписокМатериалов.ХарактеристикаНоменклатуры = ТоварыВРезерве.ХарактеристикаНоменклатуры
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.МатериалыВПроизводстве.Остатки(&ДатаПланирования, Заказ = &ЗаказНаПроизводство) КАК МатериалыВПроизводствеОстатки
						|		ПО (СписокМатериалов.Номенклатура = МатериалыВПроизводствеОстатки.Затрата И СписокМатериалов.ХарактеристикаНоменклатуры = МатериалыВПроизводствеОстатки.ХарактеристикаЗатраты)
						|ГДЕ
						|	(ЕСТЬNULL(ТоварыВРезерве.КоличествоОстаток, 0) + ЕСТЬNULL(МатериалыВПроизводствеОстатки.КоличествоОстаток, 0)) < СписокМатериалов.Количество" ;
						
						ЗапросМатериалов.УстановитьПараметр("ДатаПланирования", КонецДня(ДатаПланирования));
						ЗапросМатериалов.УстановитьПараметр("ЗаказНаПроизводство", СтрТаблицаТО.ЗаказНаПроизводство);
						ЗапросМатериалов.УстановитьПараметр("НомерОперации", СтрТаблицаТО.НомерОперации);
						
						ВыборкаМатериалов = ЗапросМатериалов.Выполнить().Выбрать();
						Пока ВыборкаМатериалов.Следующий() Цикл  							
							Сообщить("ПРОПУЩЕНА ОПЕРАЦИЯ: " + СтрТаблицаТО.НомерОперации + "." + СтрТаблицаТО.ТехнологическаяОперация + " НЕТ МАТЕРИАЛА " +  ВыборкаМатериалов.Номенклатура + " (" +  ВыборкаМатериалов.НедостающееКоличество + ВыборкаМатериалов.Номенклатура.БазоваяЕдиницаИзмерения + ")"+ ", заказ " + СтрТаблицаТО.ЗаказНаПроизводство.Номер);
							СтрТаблицаТО.ДлительностьДляПлана = 0;
						КонецЦикла;   						
						
						
						
						//КонецЕсли; 
						
						
						Если СтрТаблицаТО.ДлительностьДляПлана > 0 Тогда
							НачалоОперацииНеРаньше = НачалоДня(ДатаПланирования);  
							
							//Найти предыдущую операцию, она должна быть запланирована
							
							ЗапросПредОперации = новый Запрос;
							ЗапросПредОперации.Текст = 
							
							"ВЫБРАТЬ
							|	ТабЧастьПлан.ЗаказНаПроизводство,
							|	ТабЧастьПлан.ДатаОкончания,
							|	ТабЧастьПлан.СледующиеОперации,
							|	ТабЧастьПлан.НомерОперации,
							|	ТабЧастьПлан.ТехнологическаяОперация,
							|	ТабЧастьПлан.РабочийЦентр
							|ПОМЕСТИТЬ ВрТабЧастьПлан
							|ИЗ
							|	&ТабЧастьПлан КАК ТабЧастьПлан
							|ГДЕ
							|	ТабЧастьПлан.ЗаказНаПроизводство = &ЗаказНаПроизводство
							|	И ТабЧастьПлан.СледующиеОперации ПОДОБНО &СледующиеОперации
							|;
							|
							|////////////////////////////////////////////////////////////////////////////////
							|ВЫБРАТЬ
							|	ТаблицаТО.ЗаказНаПроизводство,
							|	ТаблицаТО.СледующиеОперации,
							|	ТаблицаТО.ТехнологическаяОперация,
							|	ТаблицаТО.НомерОперации,
							|	ТаблицаТО.ДлительностьДляПлана 							
							//|		,ТаблицаТО.РЦСотрудник							
							|ПОМЕСТИТЬ ВрТаблицаТО
							|ИЗ
							|	&ТаблицаТО КАК ТаблицаТО
							|ГДЕ
							|	ТаблицаТО.ЗаказНаПроизводство = &ЗаказНаПроизводство
							|	И ВЫразить(ТаблицаТО.СледующиеОперации как Строка) ПОДОБНО &СледующиеОперации
							|;
							|
							|////////////////////////////////////////////////////////////////////////////////
							|ВЫБРАТЬ
							|	ВрТабЧастьПлан.ДатаОкончания КАК ДатаОкончания,
							|	ВрТабЧастьПлан.РабочийЦентр КАК РабочийЦентр,
							|	ВрТаблицаТО.ДлительностьДляПлана КАК ДлительностьДляПлана,
							|	ВрТаблицаТО.ТехнологическаяОперация,
							|	ВрТаблицаТО.НомерОперации
							|ИЗ
							|	ВрТаблицаТО КАК ВрТаблицаТО
							|		ЛЕВОЕ СОЕДИНЕНИЕ ВрТабЧастьПлан КАК ВрТабЧастьПлан
							|		ПО ВрТаблицаТО.ТехнологическаяОперация = ВрТабЧастьПлан.ТехнологическаяОперация
							|			И ВрТаблицаТО.НомерОперации = ВрТабЧастьПлан.НомерОперации";
							
							ЗапросПредОперации.УстановитьПараметр("ТаблицаТО", ТаблицаТО);
							ЗапросПредОперации.УстановитьПараметр("ТабЧастьПлан", ТабЧастьПлан);
							
							ЗапросПредОперации.УстановитьПараметр("ЗаказНаПроизводство", СтрТаблицаТО.ЗаказНаПРоизводство);
							//ЗапросПредОперации.УстановитьПараметр("ТехнологическаяКарта", СтрТаблицаТО.ТехнологическаяКарта);
							ЗапросПредОперации.УстановитьПараметр("СледующиеОперации", "%" + СтрТаблицаТО.НомерОперации + "%");
							
							ПРедОперация = ЗапросПредОперации.Выполнить().Выбрать();
							Пропустить = ложь;
							Пока ПРедОперация.Следующий() цикл
								
								Если ЗначениеЗаполнено(ПРедОперация.ДатаОкончания) И ПредОперация.ДлительностьДляПлана = 0 Тогда
									НачалоОперацииНеРаньше = макс(НачалоОперацииНеРаньше, ПРедОперация.ДатаОкончания);
									СтрТаблицаТО.РЦСотрудник = ПредОперация.РабочийЦентр;
								Иначе
									Пропустить = истина;
									Прервать;
								КонецЕсли; 
							КонецЦикла; 
							
							
							Если не Пропустить  Тогда    //Тогда ищем на кого распределить эту операцию
								Если ЗначениеЗаполнено(СтрТаблицаТО.РЦСотрудник)  Тогда
									Если ДоступностьРЦ(СтрТаблицаТО.РЦСотрудник, ДатаПланирования, Подразделение, ТаблицаРЦ) тогда
										Запланировать(СтрТаблицаТО, НачалоОперацииНеРаньше, Подразделение, ТаблицаРЦ, ТабЧастьПлан);
									иначе
										СтрТаблицаТО.РЦСотрудник = Неопределено;
										НайтиИЗапланировать(СтрТаблицаТО, НачалоОперацииНеРаньше, Подразделение, ТаблицаРЦ, ТабЧастьПлан);
									конецЕсли;
								Иначе
									НайтиИЗапланировать(СтрТаблицаТО, НачалоОперацииНеРаньше, Подразделение, ТаблицаРЦ, ТабЧастьПлан);
								КонецЕсли; 	
							Иначе
								Если ПроверкаДня > 0 и КонтрольНерабочихДней <3 тогда
									Сообщить ("ПРОПУЩЕНА ОПЕРАЦИЯ: " +  СтрТаблицаТО.НомерОперации + "." + СтрТаблицаТО.ТехнологическаяОперация + " , так как НЕ ЗАПЛАНИРОВАНА -> " +  ПРедОперация.НомерОперации + "."+ ПРедОперация.ТехнологическаяОперация + ", заказ " + СтрТаблицаТО.ЗаказНаПроизводство.Номер);
								КОнецЕсли;
							КонецЕсли; 		
						КонецЕсли;
						//	КонецЕсли;
					КонецЦикла; 
					
					Если КонтрольУменьшенияДлительности = ТаблицаТО.Итог("ДлительностьДляПлана") Тогда
						КонтрольНерабочихДней = КонтрольНерабочихДней+1;
					Иначе
						КонтрольНерабочихДней = 0;
					КонецЕсли; 	
					
					Если КонтрольНерабочихДней = 15 Тогда
						Прервать;
					КонецЕсли; 
					ДатаПланирования = ДатаПланирования + 86400;
					Если КонтрольНерабочихДней < 3 тогда
						Сообщить("-----------------------------------------------------------");
						ПроверкаДня = ПроверитьДень(ДатаПланирования, Подразделение, Истина) ;
						Если ПроверкаДня > 0 тогда
							Сообщить ("//ОПЕРАЦИИ//");
						Иначе
							Сообщить ("//ОПЕРАЦИИ НЕ ПЛАНИРУЮТСЯ//");
							
						КОнецЕсли;
					КОнецЕсли;
					
					
					//НулевыеСтроки = ТаблицаТО.НайтиСтроки(Новый Структура("ДлительностьДляПлана",0));  //НЕльзя убирать распланированные строки, так как невозможно будет найти пред.операцию
					//Для каждого НулеваяСтрока Из НулевыеСтроки Цикл
					//	ТаблицаТО.Удалить(НулеваяСтрока)
					//КонецЦикла;
					
					
				КОнецЦикла; 
			КонецЕсли;			
		КонецЕсли; 
		
		
	КонецПроцедуры // ВыполнитьПланирование()
	
	Функция ПроверитьДень(ДатаПланирования, Подразделение, ВыводИнформации) экспорт
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РабочиеЦентры.Ссылка,
		|	ЕСТЬNULL(ГрафикДоступности.Секунды, 0) КАК Секунды
		|ИЗ
		|	Справочник.РабочиеЦентры КАК РабочиеЦентры
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			М_ГрафикДоступностиРЦ.РабочийЦентр КАК РабочийЦентр,
		|			СУММА(РАЗНОСТЬДАТ(М_ГрафикДоступностиРЦ.ДатаНачала, М_ГрафикДоступностиРЦ.ДатаОкончания, СЕКУНДА)) КАК Секунды
		|		ИЗ
		|			РегистрСведений.М_ГрафикДоступностиРЦ КАК М_ГрафикДоступностиРЦ
		|		ГДЕ
		|			М_ГрафикДоступностиРЦ.ДатаНачала >= &ДатаНачалаПланирования
		|			И М_ГрафикДоступностиРЦ.ДатаОкончания <= &ДатаОкончанияПланирования
		|		
		|		СГРУППИРОВАТЬ ПО
		|			М_ГрафикДоступностиРЦ.РабочийЦентр) КАК ГрафикДоступности
		|		ПО РабочиеЦентры.Ссылка = ГрафикДоступности.РабочийЦентр
		|ГДЕ
		|	РабочиеЦентры.Подразделение В ИЕРАРХИИ(&Подразделение)
		|
		|УПОРЯДОЧИТЬ ПО
		|	РабочиеЦентры.М_Оборудование,
		|	РабочиеЦентры.Наименование";
		
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		Запрос.УстановитьПараметр("ДатаНачалаПланирования", НачалоДня(ДатаПланирования));
		Запрос.УстановитьПараметр("ДатаОкончанияПланирования", КонецДня(ДатаПланирования));
		
		РезультатЗапроса = Запрос.Выполнить();
		ИтогСекунды = РезультатЗапроса.Выгрузить().Итог("Секунды");
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыводИнформации Тогда
			Если ИтогСекунды > 0 Тогда
				Сообщить("На дату: " +  ФОрмат(ДатаПланирования,"ДЛФ=Д") );
				Сообщить("//РАБОЧИЕ ЦЕНТРЫ//");
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   				
					Сообщить("У рабочего центра " + ВыборкаДетальныеЗаписи.Ссылка + " доступного времени: " + Формат(Число(ВыборкаДетальныеЗаписи.Секунды)/60/60,"ЧЦ=4;ЧДЦ=2") + " ч." );				
				КонецЦикла;
				
			иначе
				Сообщить("На дату: " +  ФОрмат(ДатаПланирования,"ДЛФ=Д") + " нет доступных рабочих центров, день не рабочий или не заполнены графики доступности рабочих центров");			
			КонецЕсли; 
			
		КонецЕсли; 	
		Возврат (ИтогСекунды);	
		
	КонецФункции // ()
	
	Процедура НайтиИЗапланировать(СтрТаблицаТО, НачалоОперацииНеРаньше, Подразделение, ТаблицаРЦ, ТабЧастьПлан)экспорт
		
		ТаблицаРЦ.Сортировать("Длительность убыв,ДатаНачала,РабочийЦентр");
		
		Если ТипЗнч(СТрТаблицаТО.РабочийЦентр) = Тип("СправочникСсылка.РабочиеЦентры")  Тогда //Это оборудование
			// ТаблицаРЦ = Новый ТаблицаЗначений;
			Если СТрТаблицаТО.РабочийЦентр.ПодчиненныеРабочиеЦентры.Количество() > 0 тогда
				Если ТипЗнч(СТрТаблицаТО.РабочийЦентр.ПодчиненныеРабочиеЦентры[0].РабочийЦентр) = Тип("СправочникСсылка.ГруппыЗаменяемостиРабочихЦентров") Тогда
					
					
					
					
					Для каждого СтрТаблицаРЦ Из ТаблицаРЦ  Цикл
						Если СтрТаблицаРЦ.РабочийЦентр = СтрТаблицаТО.РабочийЦЕнтр  Тогда
							Если СтрТаблицаРЦ.Длительность > 0 Тогда
								
								
								Для каждого СтрТаблицаРЦ2 Из ТаблицаРЦ  Цикл
									Если СтрТаблицаТО.РабочийЦЕнтр.ПодчиненныеРабочиеЦентры[0].РабочийЦентр.Состав.Найти(СтрТаблицаРЦ2.РабочийЦентр) <> Неопределено  Тогда
										Если СтрТаблицаРЦ2.Длительность > 0 Тогда
											
											СтрТаблицаТО.РЦСотрудник = СтрТаблицаРЦ2.РабочийЦентр;
											СтрТаблицаТО.РЦОборудование = СтрТаблицаРЦ.РабочийЦентр;
											Запланировать(СтрТаблицаТО, НачалоОперацииНеРаньше, Подразделение, ТаблицаРЦ, ТабЧастьПлан);
											
											Прервать;
										КонецЕсли;
									КонецЕсли;
								КОнецЦикла;
								Прервать
							КонецЕсли; 
						КонецЕсли; 
					КонецЦикла;  
					
				Иначе
					
					Сообщить ("" + СТрТаблицаТО.РабочийЦентр + " пропущен при планировании. РЦ оборудование должен иметь одну подчиненную группу рабочих центров, а не отдельный РЦ");
					
				КонецЕсли; 
			Иначе	
				Сообщить ("" + СТрТаблицаТО.РабочийЦентр + " пропущен при планировании. РЦ не имеет подчиненную группу рабочих центров, а оборудование самостоятельно не работает");
			КонецЕсли; 	
		Иначе //Это сотрудники
			
			Если СТрТаблицаТО.РабочийЦентр.ПодчиненныеРабочиеЦентры.Количество() > 0 тогда
				Сообщить ("" + СТрТаблицаТО.РабочийЦентр + " имеет подчиненные рабочие центры, эта информация будет игнорироваться, но лучше удалите ее из справочника.");
			КонецЕсли;
			
			Для каждого СтрТаблицаРЦ Из ТаблицаРЦ  Цикл
				Если СтрТаблицаТО.РабочийЦЕнтр.Состав.Найти(СтрТаблицаРЦ.РабочийЦентр) <> Неопределено  Тогда
					Если СтрТаблицаРЦ.Длительность > 0 Тогда
						
						СтрТаблицаТО.РЦСотрудник = СтрТаблицаРЦ.РабочийЦентр;
						Запланировать(СтрТаблицаТО, НачалоОперацииНеРаньше, Подразделение, ТаблицаРЦ, ТабЧастьПлан);
						
						Прервать;
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;  		
		КонецЕсли; 
		
		
	КонецПроцедуры 
	
	Процедура Запланировать(СтрТаблицаТО, НачалоОперацииНеРаньше, Подразделение, ТаблицаРЦ, ТабЧастьПлан) экспорт
		ТаблицаРЦ.Сортировать("Длительность убыв");	
		Если ТипЗнч(СтрТаблицаТО.РабочийЦентр) = Тип("СправочникСсылка.РабочиеЦентры") Тогда  //планировать надо параллельно - оборудование и сотрудника
			//Если ЗначениеЗаполнено(СтрТаблицаТО.РЦОборудование)	тогда
			Для каждого СтрТаблицаРЦ из ТАблицаРЦ  Цикл
				Если СтрТаблицаРЦ.РабочийЦентр = стрТаблицаТО.РабочийЦентр Тогда //нашли оборудование
					Для каждого СтрТаблицаРЦ2 из ТАблицаРЦ  Цикл
						Если СтрТаблицаРЦ2.РабочийЦентр = стрТаблицаТО.РЦСотрудник Тогда //нашли сотрудника
							
							ДатаВозможногоНачала = макс(СтрТаблицаРЦ.ДатаНачала, НачалоОперацииНеРаньше,СтрТаблицаРЦ2.ДатаНачала);
							ДатаВозможногоОкончания = мин(ДатаВозможногоНачала+СтрТаблицаТО.ДлительностьДляПлана, СтрТаблицаРЦ.ДатаОкончания, СтрТаблицаРЦ2.ДатаОкончания);
							
							Если ДатаВозможногоОкончания > ДатаВозможногоНачала тогда
								ВписатьВПлан(ТабЧастьПлан, ТаблицаРЦ, стрТаблицаТО, СтрТаблицаРЦ,ДатаВозможногоНачала,  ДатаВозможногоОкончания);
								ВписатьВПлан(ТабЧастьПлан, ТаблицаРЦ, стрТаблицаТО, СтрТаблицаРЦ2,ДатаВозможногоНачала,  ДатаВозможногоОкончания);
								СтрТаблицаТО.ДлительностьДляПлана = СтрТаблицаТО.ДлительностьДляПлана - (ДатаВозможногоОкончания - ДатаВозможногоНачала);
								Сообщить ("ЗАПЛАНИРОВАНА ОПЕРАЦИЯ: " +  СтрТаблицаТО.НомерОперации + "." + СтрТаблицаТО.ТехнологическаяОперация + ", заказ " + СтрТаблицаТО.ЗаказНаПроизводство.Номер);
								
								//У РЦ может быть несколько доступных интервалов, надо использовать, если надо все
								Если СтрТаблицаТО.ДлительностьДляПлана > 0 Тогда 
									Запланировать(СтрТаблицаТО, НачалоОперацииНеРаньше, Подразделение, ТаблицаРЦ, ТабЧастьПлан);
								КонецЕсли; 
								
							КонецЕсли;
							
							
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		иначе	 //если только сотрудник, то все проще
			Для каждого СтрТаблицаРЦ из ТАблицаРЦ  Цикл
				Если СтрТаблицаРЦ.РабочийЦентр = стрТаблицаТО.РЦСотрудник Тогда //нашли нужного сотрудника
					ДатаВозможногоНачала = макс(СтрТаблицаРЦ.ДатаНачала, НачалоОперацииНеРаньше);
					ДатаВозможногоОкончания = мин(ДатаВозможногоНачала+СтрТаблицаТО.ДлительностьДляПлана, СтрТаблицаРЦ.ДатаОкончания);
					
					Если ДатаВозможногоОкончания > ДатаВозможногоНачала тогда
						ВписатьВПлан(ТабЧастьПлан, ТаблицаРЦ, стрТаблицаТО, СтрТаблицаРЦ,ДатаВозможногоНачала,  ДатаВозможногоОкончания);
						СтрТаблицаТО.ДлительностьДляПлана = СтрТаблицаТО.ДлительностьДляПлана - (ДатаВозможногоОкончания - ДатаВозможногоНачала);
						Сообщить ("ЗАПЛАНИРОВАНА ОПЕРАЦИЯ: " +  СтрТаблицаТО.НомерОперации + "." + СтрТаблицаТО.ТехнологическаяОперация + ", заказ " + СтрТаблицаТО.ЗаказНаПроизводство.Номер);
						//У РЦ может быть несколько доступных интервалов, надо использовать, если надо все
						Если СтрТаблицаТО.ДлительностьДляПлана > 0 Тогда 
							Запланировать(СтрТаблицаТО, НачалоОперацииНеРаньше, Подразделение, ТаблицаРЦ, ТабЧастьПлан);
						КонецЕсли;    
						
					КонецЕсли;
					Прервать; 
				КонецЕсли;
			КонецЦикла;		
		КонецЕсли; 	
	КонецПроцедуры // ()
	
	Функция ДоступностьРЦ(РЦСотрудник, ДатаПланирования, Подразделение, ТаблицаРЦ) экспорт
		СотрудникДоступен = ложь;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|		М_ГрафикДоступностиРЦ.РабочийЦентр КАК РабочийЦентр,
		|		СУММА(РАЗНОСТЬДАТ(М_ГрафикДоступностиРЦ.ДатаНачала, М_ГрафикДоступностиРЦ.ДатаОкончания, СЕКУНДА)) КАК Секунды
		|	ИЗ
		|		РегистрСведений.М_ГрафикДоступностиРЦ КАК М_ГрафикДоступностиРЦ
		|	ГДЕ
		|		М_ГрафикДоступностиРЦ.ДатаНачала >= &ДатаНачалаПланирования
		|		И М_ГрафикДоступностиРЦ.ДатаОкончания <= &ДатаОкончанияПланирования
		|		И М_ГрафикДоступностиРЦ.РабочийЦентр = &РабочийЦентр
		|	
		|	СГРУППИРОВАТЬ ПО
		|		М_ГрафикДоступностиРЦ.РабочийЦентр";
		
		Запрос.УстановитьПараметр("РабочийЦентр", РЦСотрудник);
		Запрос.УстановитьПараметр("ДатаНачалаПланирования", НачалоДня(ДатаПланирования));
		Запрос.УстановитьПараметр("ДатаОкончанияПланирования", КонецДня(ДатаПланирования));
		
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
		Если  РезультатЗапроса.Следующий() тогда
			//ТаблицаРЦ = новый ТаблицаЗначений;
			УжеЗанят = ТаблицаРЦ.Найти(РЦСотрудник, "РабочийЦентр");
			Если УжеЗанят<> Неопределено Тогда
				СотрудникДоступен = ?(УжеЗанят.Длительность > 0, Истина, Ложь);
			Иначе
				
				СотрудникДоступен = истина;
				
			КонецЕсли; 
			
			
		Иначе
			Если ПроверитьДень(ДатаПланирования, Подразделение, ложь) > 0 Тогда
				
				Сообщить("" +  ФОрмат(ДатаПланирования,"ДЛФ=Д") + " рабочий центр " + РЦСотрудник + " не работает. Операция будет перенесена на другой рабочий центр.")
				
			КонецЕсли; 
		КонецЕсли;
		
		Возврат(СотрудникДоступен);
	КонецФункции // ()
	
	Процедура ВписатьВПлан(ТабЧастьПлан, ТаблицаРЦ, стрТаблицаТО, СтрТаблицаРЦ, ДатаВозможногоНачала, ДатаВозможногоОкончания);
		
		//Заполняем документ план
		СтрТабЧастьПлан = ТабЧастьПлан.Добавить();   
		СтрТабЧастьПлан.РабочийЦентр = СтрТаблицаРЦ.РабочийЦентр;
		СтрТабЧастьПлан.ЗаказНаПроизводство = СтрТаблицаТО.ЗаказНаПроизводство;
		СтрТабЧастьПлан.КонечнаяПродукция = СтрТаблицаТО.КонечнаяПродукция;
		СтрТабЧастьПлан.ХарактеристикаКонечнойПродукции = СтрТаблицаТО.ХарактеристикаКонечнойПродукции;
		СтрТабЧастьПлан.ТехнологическаяОперация = СтрТаблицаТО.ТехнологическаяОперация; 
		СтрТабЧастьПлан.НомерОперации = СтрТаблицаТО.НомерОперации;
		СтрТабЧастьПлан.СледующиеОперации = СтрТаблицаТО.СледующиеОперации;
		СтрТабЧастьПлан.Количество = СтрТаблицаТО.Количество;
		СтрТабЧастьПлан.ДатаНачала = ДатаВозможногоНачала;
		СтрТабЧастьПлан.ДатаОкончания = ДатаВозможногоОкончания;
		
		
		//Теперь списываем доступный интервал РЦ  	
		Если СтрТаблицаРЦ.ДатаНачала < СтрТабЧастьПлан.ДатаНачала Тогда
			НоваяСтрокаТаблицыРЦ = ТаблицаРЦ.Добавить();
			НоваяСтрокаТаблицыРЦ.ДатаНачала = СтрТаблицаРЦ.ДатаНачала;
			НоваяСтрокаТаблицыРЦ.ДатаОкончания = ДатаВозможногоНачала;
			НоваяСтрокаТаблицыРЦ.Длительность = НоваяСтрокаТаблицыРЦ.ДатаОкончания - НоваяСтрокаТаблицыРЦ.ДатаНачала;
			НоваяСтрокаТаблицыРЦ.РабочийЦентр = СтрТаблицаРЦ.РабочийЦентр;
		КонецЕсли; 
		СтрТаблицаРЦ.ДатаНачала = СтрТабЧастьПлан.ДатаОкончания;
		СтрТаблицаРЦ.Длительность = СтрТаблицаРЦ.ДатаОкончания - СтрТаблицаРЦ.ДатаНачала;
		
	
	КонецПроцедуры
	
	Процедура М_ДопПроведениеПланаПроизводстваОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
		
		Если Источник.АвтоматическийПорядокЗаказов  тогда
			
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПланПроизводстваПоСменам.Ссылка,
			|	ПланПроизводстваПоСменам.Номер,
			|	ПланПроизводстваПоСменам.Дата
			|ИЗ
			|	Документ.ПланПроизводстваПоСменам КАК ПланПроизводстваПоСменам
			|ГДЕ
			|	ПланПроизводстваПоСменам.Проведен
			|	И ПланПроизводстваПоСменам.НачальнаяГраница = &НачальнаяГраница
			|	И ПланПроизводстваПоСменам.АвтоматическийПорядокЗаказов = 1
			|	И ПланПроизводстваПоСменам.Ссылка <> &Ссылка";
			
			Запрос.УстановитьПараметр("НачальнаяГраница", Источник.НачальнаяГраница);
			Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			Если РезультатЗапроса.Количество() > 0 Тогда
				Отказ = Истина;
				#Если Клиент Тогда
					Сообщить("Уже существует проведённый документ (№" + СокрЛП(РезультатЗапроса[0].Номер) + " от " + Формат(РезультатЗапроса[0].Дата, "ДФ=dd.MM.yy") + "), граница перепланирования которого " + Формат(Источник.НачальнаяГраница, "ДФ=dd.MM.yyyy"), СтатусСообщения.Важное);
				#КонецЕсли
				Возврат;
			КонецЕсли;
			
			
			
			Если Источник.М_ПланПроизводстваПоТехоперациям.Количество() > 0  Тогда
				
				НаборЗаписей = источник.движения.М_ПланированиеТехнологическихОпераций;
				
				// добавление новых записей
				Для Каждого СтрокаТаблицы ИЗ Источник.М_ПланПроизводстваПоТехоперациям Цикл
					НоваяЗапись = НаборЗаписей.Добавить();
					
					НоваяЗапись.Регистратор = Источник.Ссылка; 
					НоваяЗапись.Период = Источник.Дата; 
					НоваяЗапись.ПериодПланирования = Источник.НачальнаяГраница;
					НоваяЗапись.РабочийЦентр = СтрокаТаблицы.РабочийЦентр;
					НоваяЗапись.ДатаНачала = СтрокаТаблицы.ДатаНачала; 
					НоваяЗапись.ДатаОкончания = СтрокаТаблицы.ДатаОкончания; 
					НоваяЗапись.ЗаказНаПроизводство = СтрокаТаблицы.ЗаказНаПроизводство;
					НоваяЗапись.КонечнаяПродукция = СтрокаТаблицы.КонечнаяПродукция;
					НоваяЗапись.ХарактеристикаПродукции = СтрокаТаблицы.ХарактеристикаКонечнойПродукции;
					НоваяЗапись.ТехнологическаяОперация = СтрокаТаблицы.ТехнологическаяОперация;
					НоваяЗапись.НомерОперации = СтрокаТаблицы.НомерОперации;
					НоваяЗапись.Подразделение = СтрокаТаблицы.ЗаказНаПроизводство.Подразделение;
					НоваяЗапись.Количество = СтрокаТаблицы.Количество;
				КонецЦикла;	
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура М_ДопПроведениеПланаПроизводства1ОбработкаУдаленияПроведения(Источник, Отказ) Экспорт
		
	КонецПроцедуры
	
	//Задание на производство
	
	Процедура ЗаполнитьПоПлануОпераций(ТЧДокумента, ДатаЗаполнения, Подразделение) Экспорт
		Остановить = ложь;
		Если ТЧДокумента.Количество() > 0 Тогда
			Если Вопрос("Табличная часть не пустая и будет очищена, продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да тогда
				ТЧДокумента.Очистить();
			Иначе	
				Остановить = Истина;
				
				
			КонецЕсли; 
			
		КонецЕсли;	
		
		Если Не Остановить Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			
			
			"ВЫБРАТЬ
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.ДатаНачала КАК Период,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.РабочийЦентр,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.ДатаНачала,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.ДатаОкончания,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.ЗаказНаПроизводство,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.ЗаказНаПроизводство КАК Заказ,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.КонечнаяПродукция,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.ХарактеристикаПродукции,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.ТехнологическаяОперация,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.ТехнологическаяОперация КАК ТехОперация,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.НомерОперации,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.Подразделение,
			|	М_ПланированиеТехнологическихОперацийСрезПоследних.Количество,
			|	ЗаказНаПроизводствоМаршрут.СледующиеОперации
			|ИЗ
			|	РегистрСведений.М_ПланированиеТехнологическихОпераций.СрезПоследних(
			|			,
			|			НАЧАЛОПЕРИОДА(ДатаНачала, ДЕНЬ) = &ДатаЗаполнения
			|				И ПериодПланирования = &ДатаЗаполнения
			|				И Подразделение = &Подразделение) КАК М_ПланированиеТехнологическихОперацийСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Маршрут КАК ЗаказНаПроизводствоМаршрут
			|		ПО М_ПланированиеТехнологическихОперацийСрезПоследних.ТехнологическаяОперация = ЗаказНаПроизводствоМаршрут.ТехнологическаяОперация
			|			И М_ПланированиеТехнологическихОперацийСрезПоследних.НомерОперации = ЗаказНаПроизводствоМаршрут.НомерОперации
			|			И М_ПланированиеТехнологическихОперацийСрезПоследних.ЗаказНаПроизводство = ЗаказНаПроизводствоМаршрут.Ссылка";
			
			
			
			Запрос.УстановитьПараметр("ДатаЗаполнения", НачалоДня(ДатаЗаполнения));
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
			
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			
			ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(РезультатЗапроса, ТЧДокумента);	
		КОнецЕсли;
	КонецПроцедуры
	
	//Отчет производства
	
	Процедура М_ДопПроведениеОПЗСОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
		
		//Если М_ПооперационноеПланированиеПроизводства.ОпределитьПринадлежностьОбъектовПооперационногоПланирования(Источник.ПОдразделение)  тогда
		
		Если Источник.М_ПланПроизводстваПоТехоперациям.Количество() > 0  Тогда
			
			ЗаписиВыполненияТО = источник.движения.М_ВыполненыеТехнологическиеОперации;
			ЗаписиРегистраВыработки =источник.Движения.ВыработкаСотрудниковЦеха;
			// добавление новых записей
			Для Каждого СтрокаТаблицы ИЗ Источник.М_ПланПроизводстваПоТехоперациям Цикл
				
				Если СтрокаТаблицы.выполнение > 0 Тогда
					
					НоваяЗапись = ЗаписиВыполненияТО.Добавить();
					
					НоваяЗапись.Период = Источник.Дата; 
					НоваяЗапись.Регистратор = Источник.Ссылка; 
					НоваяЗапись.РабочийЦентр = СтрокаТаблицы.РабочийЦентр;
					НоваяЗапись.ЗаказНаПроизводство = СтрокаТаблицы.ЗаказНаПроизводство;
					НоваяЗапись.КонечнаяПродукция = СтрокаТаблицы.КонечнаяПродукция;
					НоваяЗапись.ХарактеристикаПродукции = СтрокаТаблицы.ХарактеристикаКонечнойПродукции;
					НоваяЗапись.ТехнологическаяОперация = СтрокаТаблицы.ТехнологическаяОперация;
					НоваяЗапись.НомерОперации = СтрокаТаблицы.НомерОперации;
					НоваяЗапись.Подразделение = СтрокаТаблицы.ЗаказНаПроизводство.Подразделение;
					НоваяЗапись.Выполнение = СтрокаТаблицы.Выполнение;
					
					
					НоваяЗаписьРегистраВыработки = ЗаписиРегистраВыработки.Добавить();
					
					НоваяЗаписьРегистраВыработки.Период = Источник.Дата;
					НоваяЗаписьРегистраВыработки.Регистратор = Источник.Ссылка;
					НоваяЗаписьРегистраВыработки.Дата = Источник.Дата;
					НоваяЗаписьРегистраВыработки.Сотрудник = СтрокаТаблицы.Сотрудник;
					НоваяЗаписьРегистраВыработки.Количество = 1;
					НоваяЗаписьРегистраВыработки.ТехнологическаяОперация = СтрокаТаблицы.ТехнологическаяОперация;
					НоваяЗаписьРегистраВыработки.НомерОперации = СтрокаТаблицы.НомерОперации;
					НоваяЗаписьРегистраВыработки.ЗаказНаПроизводство = СтрокаТаблицы.ЗаказНаПроизводство;
					НоваяЗаписьРегистраВыработки.Номенклатура = СтрокаТаблицы.КонечнаяПродукция;
					НоваяЗаписьРегистраВыработки.ХарактеристикаНоменклатуры = СтрокаТаблицы.ХарактеристикаКонечнойПродукции;
					НоваяЗаписьРегистраВыработки.Сложность = СтрокаТаблицы.Выполнение/3600;
				КонецЕсли;
			КонецЦикла;	
			
		КонецЕсли; 

КонецПроцедуры
	
	Процедура ЗаполнитьПоЗаданиюОперации(ТЧДокумента, ЗаданиеНаПроизводство)  Экспорт
		
		Остановить = ложь;
		Если ТЧДокумента.Количество() > 0 Тогда
			Если Вопрос("Табличная часть не пустая и будет очищена, продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да тогда
				ТЧДокумента.Очистить();
			Иначе	
				Остановить = Истина;				
				
			КонецЕсли; 
			
		КонецЕсли;	
		
		Если Не Остановить Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Задание.Ссылка,
			|	Задание.РабочийЦентр,
			|	Задание.Смена,
			|	Задание.ТехнологическаяОперация,
			|	Задание.Номенклатура,
			|	Задание.ХарактеристикаНоменклатуры,
			|	Задание.ЕдиницаИзмерения,
			|	Задание.Коэффициент,
			|	Задание.Количество,
			|	Задание.КонечнаяПродукция,
			|	Задание.ЗаказНаПроизводство,
			|	Задание.Проект,
			|	Задание.НомерОперации,
			|	Задание.ХарактеристикаКонечнойПродукции,
			|	СУММА(Задание.Выполнение) КАК ВыполнениеПлан,
			|	СУММА(Задание.Выполнение) КАК Выполнение,
			|	Задание.СледующиеОперации
			|ИЗ
			|	(ВЫБРАТЬ
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.Ссылка КАК Ссылка,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.НомерСтроки КАК НомерСтроки,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.Период КАК ДатаНачала,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.ДатаОкончания КАК ДатаОкончания,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.РабочийЦентр КАК РабочийЦентр,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.Смена КАК Смена,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.ТехОперация КАК ТехнологическаяОперация,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.Номенклатура КАК Номенклатура,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.Коэффициент КАК Коэффициент,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.Количество КАК Количество,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.КонечнаяПродукция КАК КонечнаяПродукция,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.Заказ КАК ЗаказНаПроизводство,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.Проект КАК Проект,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.НомерОперации КАК НомерОперации,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.ХарактеристикаПродукции КАК ХарактеристикаКонечнойПродукции,
			|		РАЗНОСТЬДАТ(ЗаданиеНаПроизводствоВыпускТехПроцесс.Период, ЗаданиеНаПроизводствоВыпускТехПроцесс.ДатаОкончания, СЕКУНДА) КАК Выполнение,
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.СледующиеОперации КАК СледующиеОперации
			|	ИЗ
			|		Документ.ЗаданиеНаПроизводство.ВыпускТехПроцесс КАК ЗаданиеНаПроизводствоВыпускТехПроцесс
			|	ГДЕ
			|		ЗаданиеНаПроизводствоВыпускТехПроцесс.Ссылка = &ЗаданиеНаПроизводство
			|		И ЗаданиеНаПроизводствоВыпускТехПроцесс.РабочийЦентр.М_Оборудование = ЛОЖЬ) КАК Задание
			|
			|СГРУППИРОВАТЬ ПО
			|	Задание.Ссылка,
			|	Задание.ТехнологическаяОперация,
			|	Задание.ЗаказНаПроизводство,
			|	Задание.Смена,
			|	Задание.РабочийЦентр,
			|	Задание.НомерОперации,
			|	Задание.ЕдиницаИзмерения,
			|	Задание.КонечнаяПродукция,
			|	Задание.ХарактеристикаКонечнойПродукции,
			|	Задание.ХарактеристикаНоменклатуры,
			|	Задание.Номенклатура,
			|	Задание.СледующиеОперации,
			|	Задание.Проект,
			|	Задание.Количество,
			|	Задание.Коэффициент";
			
			Запрос.УстановитьПараметр("ЗаданиеНаПроизводство", ЗаданиеНаПроизводство);
			
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			
			ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(РезультатЗапроса, ТЧДокумента);	
		КОнецЕсли;
	КонецПроцедуры
	
	Процедура М_ОПЗСЗаписьПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
		
		Если Источник.Дата > Дата("20180901000000") тогда
			Если Источник.Модифицированность() Тогда
				Если Источник.Продукция.Количество() > 0 Тогда
					Для каждого Строка ИЗ Источник.Продукция Цикл
						Если ЗначениеЗаполнено(строка.заказ)  тогда
							
							Если строка.заказ.пооперационноепланирование тогда  
								//Строка.Заказ = Строка.ЗаказВыпуска;	
							Иначе                              				
								Сообщить("Для продукции заказа " + Строка.Заказ + " в колонке ЗАТРАТЫ должно быть пусто. Проверьте на закладке ПРОДУКЦИЯ и на закладке МАТЕРИАЛЫ!");
								Отказ = истина;	
								
							Конецесли; 
							
							
						ИначеЕсли ЗначениеЗаполнено(строка.заказВыпуска) тогда
							Если строка.заказВыпуска.пооперационноепланирование тогда
								Сообщить("Для продукции заказа " + Строка.Заказ + " в колонке ЗАТРАТЫ должен быть указан заказ. Проверьте и закладке ПРОДУКЦИЯ и на закладке МАТЕРИАЛЫ!");
							КонецЕсли;
						КОнецЕсли;
						
					КонецЦикла;
				КонецЕсли;			
			КонецЕсли; 
		КонецЕсли;	
		//РМЕ-
		
	КонецПроцедуры
	
	
	//Требование-накладная
	
	Процедура М_ТребованиеНакладнаяЗаписьПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
		
		Если Источник.Дата < Дата("20180907000000") тогда
			
			Если Источник.Модифицированность() Тогда
				Если Источник.Материалы.Количество() > 0 Тогда
					Для каждого Строка ИЗ Источник.Материалы Цикл
						Если ЗначениеЗаполнено(строка.заказ) тогда
							
							Если строка.заказ.пооперационноепланирование тогда  
								Строка.ЗаказРезерв = Строка.Заказ;	
							Иначе                              				
								Строка.Заказ = неопределено;
							КОнецЕсли;
							
						Иначе
							Строка.ЗаказРезерв = неопределено;
						КОнецЕсли;
						
					КонецЦикла;
				КонецЕсли;	
			КонецЕсли; 
		КонецЕслИ;	
		//РМЕ-
		
	КонецПроцедуры
	
	Процедура М_ОбработкаПроведенияТребованиеНакладнаяОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт 
		
		Если ТипЗнч(Источник.ДокументОснование) = Тип("ДокументСсылка.ЗаданиеНаПроизводство") Тогда
			НаборЗаписей = РегистрыНакопления.МатериалыПоЗаказуНаПроизводство.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Источник.Ссылка);
			
			// добавление новых записей
			Для Каждого Стр ИЗ Источник.Материалы Цикл
				Если ЗначениеЗаполнено(Стр.Заказ) Тогда
					Если СокрЛП(Стр.НомерОперации) = "" Тогда Продолжить; КонецЕсли;
					Движение = НаборЗаписей.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.ЗаказНаПроизводство = Стр.Заказ;
					Движение.Номенклатура = Стр.Номенклатура;
					Движение.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
					Движение.НомерОперации = СокрЛП(Стр.НомерОперации);
					Движение.Период = Источник.Дата;
					Движение.Количество = Стр.Количество;
				КонецЕсли;	
			КонецЦикла;	
			
			НаборЗаписей.Записать(Истина);	
		КонецЕсли;	
		
	КонецПроцедуры
	
	Процедура М_ОбработкаЗаполненияТребованиеНакладнаяОбработкаЗаполнения(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт 
		
		ЗаполнениеТребованияНакладнойПоЗаданиюНаПроизводство(Источник);
		
	КонецПроцедуры
	
	Процедура ЗаполнениеТребованияНакладнойПоЗаданиюНаПроизводство(Источник) Экспорт 
		
		Если ТипЗнч(Источник.ДокументОснование) = Тип("ДокументСсылка.ЗаданиеНаПроизводство") Тогда
			// получаем табличную часть ЗаданияНаПроизводство
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаданиеНаПроизводствоВыпускТехПроцесс.НомерОперации,
			|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Заказ
			|ИЗ
			|	Документ.ЗаданиеНаПроизводство.ВыпускТехПроцесс КАК ЗаданиеНаПроизводствоВыпускТехПроцесс
			|ГДЕ
			|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаданиеНаПроизводствоВыпускТехПроцесс.НомерОперации,
			|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Заказ";
			
			Запрос.УстановитьПараметр("Ссылка", Источник.ДокументОснование);
			
			тзЗаданиеНаПроизводство = Запрос.Выполнить().Выгрузить();
			
			// для каждого из заказов в Задании получаем табл.остатков материалов
			тзЗаказов = тзЗаданиеНаПроизводство.Скопировать();
			тзЗаказов.Свернуть("Заказ");
			
			Источник.Подразделение = Источник.ДокументОснование.Подразделение;
			
			Для Каждого СтрЗаказ ИЗ тзЗаказов Цикл
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	МатериалыПоЗаказуНаПроизводствоОстатки.ЗаказНаПроизводство,
				|	МатериалыПоЗаказуНаПроизводствоОстатки.Номенклатура,
				|	МатериалыПоЗаказуНаПроизводствоОстатки.ХарактеристикаНоменклатуры,
				|	МатериалыПоЗаказуНаПроизводствоОстатки.НомерОперации,
				|	МатериалыПоЗаказуНаПроизводствоОстатки.КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.МатериалыПоЗаказуНаПроизводство.Остатки(&ДатаДок, ЗаказНаПроизводство = &Заказ) КАК МатериалыПоЗаказуНаПроизводствоОстатки";
				
				Запрос.УстановитьПараметр("ДатаДок", ТекущаяДата());
				Запрос.УстановитьПараметр("Заказ", СтрЗаказ.Заказ);
				
				РезультатЗапроса = Запрос.Выполнить().Выгрузить();
				
				Если РезультатЗапроса.Количество() = 0 Тогда
					Продолжить; // всё материалы по данному заказу уже полученны
				Иначе
					// проверяем на совпадение по номеру операции
					Для Каждого СтрРез ИЗ РезультатЗапроса Цикл
						Если СтрРез.КоличествоОстаток <= 0 Тогда Продолжить; КонецЕсли; // отсеиваем возможные минусовые значения в регистр
						Для Каждого Стр ИЗ тзЗаданиеНаПроизводство Цикл
							Если Стр.Заказ <> СтрРез.ЗаказНаПроизводство Тогда Продолжить; КонецЕсли;
							Если СокрЛП(Стр.НомерОперации) = СокрЛП(СтрРез.НомерОперации) Тогда
								НовСтр = Источник.Материалы.Добавить();
								НовСтр.Номенклатура = СтрРез.Номенклатура;
								НовСтр.ХарактеристикаНоменклатуры = СтрРез.ХарактеристикаНоменклатуры;
								НовСтр.Количество = СтрРез.КоличествоОстаток;
								НовСтр.ЗаказРезерв = СтрРез.ЗаказНаПроизводство;
								НовСтр.Заказ = СтрРез.ЗаказНаПроизводство;
								НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
								НовСтр.Качество = Справочники.Качество.Новый;
								НовСтр.НомерОперации = СокрЛП(Стр.НомерОперации);
								НовСтр.СтатьяЗатрат = НовСтр.Номенклатура.СтатьяЗатрат;
								НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
								ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Источник);
							КонецЕсли;	
						КонецЦикла;
						
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			
			//СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Материалы", Источник.Материалы, Источник, Источник.ОтражатьВБухгалтерскомУчете, Источник.ОтражатьВНалоговомУчете, , );
			
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура М_ЗакрытиеЗаказовНаПроизводствоОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
		Для  каждого стрДокумента из Источник.заказы  Цикл                                    
			НаборЗаписей = РегистрыСведений.М_ПриоритетыПартий.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ЗаказНаПроизводство.Установить(стрДокумента.ЗаказНаПроизводство);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() = 1 Тогда
				ТекЗапись = НаборЗаписей[0];
				ТекЗапись.Выполнено = истина;
			Иначе
				// такого, по идее, быть не должно, но если регистр редактировали вручную или проводится документ, сделанный до регистрации заказов, - возможно
			КонецЕсли;
			НаборЗаписей.Записать();
			
		КонецЦикла;
	КонецПроцедуры
	
	Процедура М_ЗакрытиеЗаказовНаПроизводствоОтменаОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
		Для  каждого стрДокумента из Источник.заказы  Цикл                                    
			НаборЗаписей = РегистрыСведений.М_ПриоритетыПартий.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ЗаказНаПроизводство.Установить(стрДокумента.ЗаказНаПроизводство);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() = 1 Тогда
				ТекЗапись = НаборЗаписей[0];
				ТекЗапись.Выполнено = ложь;
			Иначе
				// такого, по идее, быть не должно, но если регистр редактировали вручную или проводится документ, сделанный до регистрации заказов, - возможно
			КонецЕсли;
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
	КонецПроцедуры
	
	Функция ВернутьОтветственногоЗаРЦ(РабочийЦентр, ДатаОтчёта = Неопределено) Экспорт //ПК+ 2018-10-09 (ТЗ 703 - Добавить ответственных сотрудников  за Рабочие центры в Печатные формы) -*-
		
		Рез = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
		
		Если НЕ ЗначениеЗаполнено(РабочийЦентр) Тогда
			Возврат Рез;
		КонецЕсли;
		
		тДатаОтчёта = ?(ДатаОтчёта = Неопределено, ТекущаяДата(), ДатаОтчёта);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтветственныеЗаРЦСрезПоследних.РабочийЦентр,
		|	ОтветственныеЗаРЦСрезПоследних.Сотрудник
		|ИЗ
		|	РегистрСведений.М_ОтветственныеЗаРЦ.СрезПоследних(&Дата, ) КАК ОтветственныеЗаРЦСрезПоследних
		|ГДЕ
		|	ОтветственныеЗаРЦСрезПоследних.РабочийЦентр = &РабочийЦентр";
		
		Запрос.УстановитьПараметр("Дата", тДатаОтчёта);
		Запрос.УстановитьПараметр("РабочийЦентр", РабочийЦентр);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		Если РезультатЗапроса.Количество() > 0 Тогда
			Рез = РезультатЗапроса[0].Сотрудник;
		КонецЕсли;
		
		Возврат Рез;
		
	КонецФункции//ПК-
#КонецЕсли 

Процедура Б_РасчётСрокаПоставкиТоваров() Экспорт //ПК+ 2019-06-22 (ТЗ 19/309 - Допиливание прогнозирования производства) -*-
	// из ТЗ: 
	// "Создать регламентное задание, которое анализирует только номенклатуру, поступившую в текущий месяц. Для каждой из них ищет среднее арифметическое  значение между датой заказа поставщику и датой поступления товаров и услуг за последние 5 лет. Значение записывает в регистр."
	
	// получаем список номенклатуры, поступившей за текущий месяц (с заполнеными ЗаказПоставщику - без них бессмысленно обрабатывать - ничего нового не рассчитаем)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Сделка.Ссылка,
	|	ПоступлениеТоваровУслугТовары.ЗаказПоставщику
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка.Проведен
	|	И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон";
	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецМесяца(ТекущаяДата())));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	сзНоменклатуры = Новый СписокЗначений;
	
	Для Каждого Стр ИЗ РезультатЗапроса Цикл
		Если ЗначениеЗаполнено(Стр.СделкаСсылка) И ТипЗнч(Стр.СделкаСсылка) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			сзНоменклатуры.Добавить(Стр.Номенклатура);
		ИначеЕсли ЗначениеЗаполнено(Стр.ЗаказПоставщику) Тогда	
			сзНоменклатуры.Добавить(Стр.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	
	Если сзНоменклатуры.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	ДатаКон = КонецДня(ТекущаяДата());
	ДатаНач = ДобавитьМесяц(ДатаКон, -60); // -5 лет
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.ХарактеристикаНоменклатуры,
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Дата,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Номер,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Сделка.Ссылка,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Сделка.Дата,
	|	0 КАК СрокПоставки,
	|	1 КАК СчДокументов,
	|	ПоступлениеТоваровУслугТовары.ЗаказПоставщику,
	|	ПоступлениеТоваровУслугТовары.ЗаказПоставщику.Дата
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка.Проведен
	|	И ПоступлениеТоваровУслугТовары.Номенклатура В(&сзНоменклатуры)
	|	И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон";
	
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("сзНоменклатуры", сзНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр ИЗ РезультатЗапроса Цикл
		Если ЗначениеЗаполнено(Стр.СделкаСсылка) И ТипЗнч(Стр.СделкаСсылка) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			ДатаПост = НачалоДня(Стр.Дата);
			ДатаЗаказ = НачалоДня(Стр.СделкаДата);
			
			Стр.СрокПоставки = (ДатаПост - ДатаЗаказ) / (24*3600);
			
		ИначеЕсли ЗначениеЗаполнено(Стр.ЗаказПоставщику) Тогда
			ДатаПост = НачалоДня(Стр.Дата);
			ДатаЗаказ = НачалоДня(Стр.ЗаказПоставщикуДата);
			
			Стр.СрокПоставки = (ДатаПост - ДатаЗаказ) / (24*3600);
			
		Иначе	
			Стр.СчДокументов = 0;
		КонецЕсли;
	КонецЦикла;
	
	РезультатЗапроса.Свернуть("Номенклатура, ХарактеристикаНоменклатуры", "СчДокументов, СрокПоставки");
	РезультатЗапроса.Сортировать("Номенклатура, ХарактеристикаНоменклатуры");
	
	Для Каждого Стр ИЗ РезультатЗапроса Цикл
		Если Стр.СчДокументов = 0 ИЛИ Стр.СрокПоставки = 0 Тогда Продолжить; КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.М_СрокиПоставкиМатериалов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Номенклатура = Стр.Номенклатура;
		МенеджерЗаписи.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
		МенеджерЗаписи.Срок = Окр(Стр.СрокПоставки / Стр.СчДокументов);
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
КонецПроцедуры



